# Generated by Django 4.0.2 on 2022-02-23 09:30

from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=254)),
                ('username', models.CharField(max_length=16, unique=True, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z]*$', 'Only alphanumeric characters are allowed.'), django.core.validators.RegexValidator('^.*[a-zA-Z]+.*$', 'At least one letter must pe present.'), django.core.validators.RegexValidator('^[a-zA-Z]+.*$', 'The first character must be a letter.')])),
                ('password', models.CharField(max_length=128, validators=[django.core.validators.MinLengthValidator(6), django.core.validators.RegexValidator('^.*[a-z]+.*$', 'At least one lowercase letter must be present.'), django.core.validators.RegexValidator('^.*[A-Z]+.*$', 'At least one uppercase letter must be present.'), django.core.validators.RegexValidator('^.*[0-9]+.*$', 'At least one digit must pe present.')])),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(default='error', error_messages={'unique': 'This code was already taken. Please try again.'}, max_length=6, unique=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z]*', 'Only alphanumerical characters.')])),
                ('secret', models.CharField(blank=True, default='', max_length=4, validators=[django.core.validators.RegexValidator('^[0-9+]', 'Only digit characters.')])),
                ('game_started', models.BooleanField(default=False)),
                ('owner', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, related_name='owned_room', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Round',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('questions_phase_started_at', models.DateTimeField(default=None, null=True)),
                ('answers_phase_started_at', models.DateTimeField(default=None, null=True)),
                ('vote_phase_started_at', models.DateTimeField(default=None, null=True)),
                ('ended', models.BooleanField(default=False)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.room')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(default=None, max_length=128, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='asked_questions', to=settings.AUTH_USER_MODEL)),
                ('respondent', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='answered_questions', to=settings.AUTH_USER_MODEL)),
                ('round', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.round')),
            ],
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(default=None, max_length=128, null=True)),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('question', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='answer', to='game.question')),
            ],
        ),
        migrations.AddField(
            model_name='player',
            name='room',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='players', to='game.room'),
        ),
    ]
